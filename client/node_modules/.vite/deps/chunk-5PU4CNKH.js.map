{
  "version": 3,
  "sources": ["../../vuetify/src/components/VTabs/VTabs.tsx", "../../vuetify/src/components/VTabs/VTab.tsx", "../../vuetify/src/components/VBtn/VBtn.tsx", "../../vuetify/src/components/VBtnToggle/VBtnToggle.tsx", "../../vuetify/src/components/VBtnGroup/VBtnGroup.tsx", "../../vuetify/src/composables/border.ts", "../../vuetify/src/composables/elevation.ts", "../../vuetify/src/composables/variant.tsx", "../../vuetify/src/composables/group.ts", "../../vuetify/src/composables/position.ts", "../../vuetify/src/composables/selectLink.ts", "../../vuetify/src/components/VTabs/shared.ts", "../../vuetify/src/components/VSlideGroup/VSlideGroup.tsx", "../../vuetify/src/components/VSlideGroup/helpers.ts"],
  "sourcesContent": ["// Styles\nimport './VTabs.sass'\n\n// Components\nimport { VTab } from './VTab'\nimport { makeVSlideGroupProps, VSlideGroup } from '@/components/VSlideGroup/VSlideGroup'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTabsSymbol } from './shared'\n\nexport type TabItem = string | Record<string, any>\n\nfunction parseItems (items: readonly TabItem[] | undefined) {\n  if (!items) return []\n\n  return items.map(item => {\n    if (typeof item === 'string') return { title: item, value: item }\n\n    return item\n  })\n}\n\nexport const makeVTabsProps = propsFactory({\n  alignTabs: {\n    type: String as PropType<'start' | 'title' | 'center' | 'end'>,\n    default: 'start',\n  },\n  color: String,\n  fixedTabs: Boolean,\n  items: {\n    type: Array as PropType<readonly TabItem[]>,\n    default: () => ([]),\n  },\n  stacked: Boolean,\n  bgColor: String,\n  grow: Boolean,\n  height: {\n    type: [Number, String],\n    default: undefined,\n  },\n  hideSlider: Boolean,\n  sliderColor: String,\n\n  ...makeVSlideGroupProps({ mandatory: 'force' as const }),\n  ...makeDensityProps(),\n  ...makeTagProps(),\n}, 'VTabs')\n\nexport const VTabs = genericComponent()({\n  name: 'VTabs',\n\n  props: makeVTabsProps(),\n\n  emits: {\n    'update:modelValue': (v: unknown) => true,\n  },\n\n  setup (props, { slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const parsedItems = computed(() => parseItems(props.items))\n    const { densityClasses } = useDensity(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n\n    provideDefaults({\n      VTab: {\n        color: toRef(props, 'color'),\n        direction: toRef(props, 'direction'),\n        stacked: toRef(props, 'stacked'),\n        fixed: toRef(props, 'fixedTabs'),\n        sliderColor: toRef(props, 'sliderColor'),\n        hideSlider: toRef(props, 'hideSlider'),\n      },\n    })\n\n    useRender(() => {\n      const [slideGroupProps] = VSlideGroup.filterProps(props)\n\n      return (\n        <VSlideGroup\n          { ...slideGroupProps }\n          v-model={ model.value }\n          class={[\n            'v-tabs',\n            `v-tabs--${props.direction}`,\n            `v-tabs--align-tabs-${props.alignTabs}`,\n            {\n              'v-tabs--fixed-tabs': props.fixedTabs,\n              'v-tabs--grow': props.grow,\n              'v-tabs--stacked': props.stacked,\n            },\n            densityClasses.value,\n            backgroundColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            { '--v-tabs-height': convertToUnit(props.height) },\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          role=\"tablist\"\n          symbol={ VTabsSymbol }\n        >\n          { slots.default ? slots.default() : parsedItems.value.map(item => (\n            <VTab { ...item } key={ item.title } />\n          ))}\n        </VSlideGroup>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTabs = InstanceType<typeof VTabs>\n", "// Styles\nimport './VTab.sass'\n\n// Components\nimport { makeVBtnProps, VBtn } from '@/components/VBtn/VBtn'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, shallowRef } from 'vue'\nimport { VTabsSymbol } from './shared'\nimport { animate, genericComponent, omit, propsFactory, standardEasing, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVTabProps = propsFactory({\n  fixed: Boolean,\n\n  sliderColor: String,\n  hideSlider: Boolean,\n\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n\n  ...omit(makeVBtnProps({\n    selectedClass: 'v-tab--selected',\n    variant: 'text' as const,\n  }), [\n    'active',\n    'block',\n    'flat',\n    'location',\n    'position',\n    'symbol',\n  ]),\n}, 'VTab')\n\nexport const VTab = genericComponent()({\n  name: 'VTab',\n\n  props: makeVTabProps(),\n\n  setup (props, { slots, attrs }) {\n    const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = useTextColor(props, 'sliderColor')\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n    const isSelected = shallowRef(false)\n\n    const rootEl = ref<VBtn>()\n    const sliderEl = ref<HTMLElement>()\n\n    function updateSlider ({ value }: { value: boolean }) {\n      isSelected.value = value\n\n      if (value) {\n        const prevEl: HTMLElement | undefined = rootEl.value?.$el.parentElement?.querySelector('.v-tab--selected .v-tab__slider')\n        const nextEl = sliderEl.value\n\n        if (!prevEl || !nextEl) return\n\n        const color = getComputedStyle(prevEl).color\n\n        const prevBox = prevEl.getBoundingClientRect()\n        const nextBox = nextEl.getBoundingClientRect()\n\n        const xy = isHorizontal.value ? 'x' : 'y'\n        const XY = isHorizontal.value ? 'X' : 'Y'\n        const rightBottom = isHorizontal.value ? 'right' : 'bottom'\n        const widthHeight = isHorizontal.value ? 'width' : 'height'\n\n        const prevPos = prevBox[xy]\n        const nextPos = nextBox[xy]\n        const delta = prevPos > nextPos\n          ? prevBox[rightBottom] - nextBox[rightBottom]\n          : prevBox[xy] - nextBox[xy]\n        const origin =\n          Math.sign(delta) > 0 ? (isHorizontal.value ? 'right' : 'bottom')\n          : Math.sign(delta) < 0 ? (isHorizontal.value ? 'left' : 'top')\n          : 'center'\n        const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight])\n        const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight])\n        const initialScale = prevBox[widthHeight] / nextBox[widthHeight]\n\n        const sigma = 1.5\n        animate(nextEl, {\n          backgroundColor: [color, 'currentcolor'],\n          transform: [\n            `translate${XY}(${delta}px) scale${XY}(${initialScale})`,\n            `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,\n            'none',\n          ],\n          transformOrigin: Array(3).fill(origin),\n        }, {\n          duration: 225,\n          easing: standardEasing,\n        })\n      }\n    }\n\n    useRender(() => {\n      const [btnProps] = VBtn.filterProps(props)\n\n      return (\n        <VBtn\n          symbol={ VTabsSymbol }\n          ref={ rootEl }\n          class={[\n            'v-tab',\n            props.class,\n          ]}\n          style={ props.style }\n          tabindex={ isSelected.value ? 0 : -1 }\n          role=\"tab\"\n          aria-selected={ String(isSelected.value) }\n          active={ false }\n          block={ props.fixed }\n          maxWidth={ props.fixed ? 300 : undefined }\n          rounded={ 0 }\n          { ...btnProps }\n          { ...attrs }\n          onGroup:selected={ updateSlider }\n        >\n          { slots.default?.() ?? props.text }\n\n          { !props.hideSlider && (\n            <div\n              ref={ sliderEl }\n              class={[\n                'v-tab__slider',\n                sliderColorClasses.value,\n              ]}\n              style={ sliderColorStyles.value }\n            />\n          )}\n        </VBtn>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VTab = InstanceType<typeof VTab>\n", "// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { useSelectLink } from '@/composables/selectLink'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport type VBtnSlots = {\n  default: never\n  prepend: never\n  append: never\n  loader: never\n}\n\nexport const makeVBtnProps = propsFactory({\n  active: {\n    type: Boolean,\n    default: undefined,\n  },\n  symbol: {\n    type: null,\n    default: VBtnToggleSymbol,\n  },\n  flat: Boolean,\n  icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n  prependIcon: IconValue,\n  appendIcon: IconValue,\n\n  block: Boolean,\n  stacked: Boolean,\n\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n\n  text: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeGroupItemProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'button' }),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'VBtn')\n\nexport const VBtn = genericComponent<VBtnSlots>()({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: makeVBtnProps(),\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n\n    const isActive = computed(() => {\n      if (props.active !== undefined) {\n        return props.active\n      }\n\n      if (link.isLink.value) {\n        return link.isActive?.value\n      }\n\n      return group?.isSelected.value\n    })\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n    const valueAttr = computed(() => {\n      if (props.value === undefined) return undefined\n\n      return Object(props.value) === props.value\n        ? JSON.stringify(props.value, null, 0) : props.value\n    })\n\n    function onClick (e: MouseEvent) {\n      if (isDisabled.value) return\n\n      link.navigate?.(e)\n      group?.toggle()\n    }\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n      const hasIcon = !!(props.icon && props.icon !== true)\n      const hasColor = (\n        (group?.isSelected.value && (!link.isLink.value || link.isActive?.value)) ||\n        (!group || link.isActive?.value)\n      )\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': isActive.value,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n            sizeStyles.value,\n            props.style,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ onClick }\n          value={ valueAttr.value }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <span key=\"prepend\" class=\"v-btn__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  icon={ props.prependIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.prependIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.prependIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </span>\n          )}\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            { (!slots.default && hasIcon) ? (\n              <VIcon\n                key=\"content-icon\"\n                icon={ props.icon }\n              />\n            ) : (\n              <VDefaultsProvider\n                key=\"content-defaults\"\n                disabled={ !hasIcon }\n                defaults={{\n                  VIcon: {\n                    icon: props.icon,\n                  },\n                }}\n              >\n                { slots.default?.() ?? props.text }\n              </VDefaultsProvider>\n            )}\n          </span>\n\n          { !props.icon && hasAppend && (\n            <span key=\"append\" class=\"v-btn__append\">\n              { !slots.append ? (\n                <VIcon\n                  key=\"append-icon\"\n                  icon={ props.appendIcon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"append-defaults\"\n                  disabled={ !props.appendIcon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.appendIcon,\n                    },\n                  }}\n                  v-slots:default={ slots.append }\n                />\n              )}\n            </span>\n          )}\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"23\"\n                  width=\"2\"\n                />\n              )}\n            </span>\n          )}\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n", "// Styles\nimport './VBtnToggle.sass'\n\n// Components\nimport { makeVBtnGroupProps, VBtnGroup } from '@/components/VBtnGroup/VBtnGroup'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport type BtnToggleSlotProps = 'isSelected' | 'select' | 'selected' | 'next' | 'prev'\nexport interface DefaultBtnToggleSlot extends Pick<GroupProvide, BtnToggleSlotProps> {}\n\nexport const VBtnToggleSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-btn-toggle')\n\ntype VBtnToggleSlots = {\n  default: DefaultBtnToggleSlot\n}\n\nexport const makeVBtnToggleProps = propsFactory({\n  ...makeVBtnGroupProps(),\n  ...makeGroupProps(),\n}, 'VBtnToggle')\n\nexport const VBtnToggle = genericComponent<VBtnToggleSlots>()({\n  name: 'VBtnToggle',\n\n  props: makeVBtnToggleProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isSelected, next, prev, select, selected } = useGroup(props, VBtnToggleSymbol)\n\n    useRender(() => {\n      const [btnGroupProps] = VBtnGroup.filterProps(props)\n\n      return (\n        <VBtnGroup\n          class={[\n            'v-btn-toggle',\n            props.class,\n          ]}\n          { ...btnGroupProps }\n          style={ props.style }\n        >\n          { slots.default?.({\n            isSelected,\n            next,\n            prev,\n            select,\n            selected,\n          } as DefaultBtnToggleSlot)}\n        </VBtnGroup>\n      )\n    })\n\n    return {\n      next,\n      prev,\n      select,\n    }\n  },\n})\n\nexport type VBtnToggle = InstanceType<typeof VBtnToggle>\n", "// Styles\nimport './VBtnGroup.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeVariantProps } from '@/composables/variant'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBtnGroupProps = propsFactory({\n  divided: Boolean,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps(),\n}, 'VBtnGroup')\n\nexport const VBtnGroup = genericComponent()({\n  name: 'VBtnGroup',\n\n  props: makeVBtnGroupProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { densityClasses } = useDensity(props)\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBtn: {\n        height: 'auto',\n        color: toRef(props, 'color'),\n        density: toRef(props, 'density'),\n        flat: true,\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-btn-group',\n            {\n              'v-btn-group--divided': props.divided,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={ props.style }\n          v-slots={ slots }\n        />\n      )\n    })\n  },\n})\n\nexport type VBtnGroup = InstanceType<typeof VBtnGroup>\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface BorderProps {\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String],\n}, 'border')\n\nexport function useBorder (\n  props: BorderProps,\n  name = getCurrentInstanceName(),\n) {\n  const borderClasses = computed(() => {\n    const border = isRef(props) ? props.value : props.border\n    const classes: string[] = []\n\n    if (border === true || border === '') {\n      classes.push(`${name}--border`)\n    } else if (\n      typeof border === 'string' ||\n      border === 0\n    ) {\n      for (const value of String(border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n", "// Composables\nimport { useColor } from '@/composables/color'\n\n// Utilities\nimport { computed, unref } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport const allowedVariants = [\n  'elevated',\n  'flat',\n  'tonal',\n  'outlined',\n  'text',\n  'plain',\n] as const\n\nexport type Variant = typeof allowedVariants[number]\n\nexport interface VariantProps {\n  color?: string\n  variant: Variant\n}\n\nexport function genOverlays (isClickable: boolean, name: string) {\n  return (\n    <>\n      { isClickable && <span key=\"overlay\" class={ `${name}__overlay` } /> }\n\n      <span key=\"underlay\" class={ `${name}__underlay` } />\n    </>\n  )\n}\n\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'elevated',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n}, 'variant')\n\nexport function useVariant (\n  props: MaybeRef<VariantProps>,\n  name = getCurrentInstanceName(),\n) {\n  const variantClasses = computed(() => {\n    const { variant } = unref(props)\n    return `${name}--variant-${variant}`\n  })\n\n  const { colorClasses, colorStyles } = useColor(computed(() => {\n    const { variant, color } = unref(props)\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color,\n    }\n  }))\n\n  return { colorClasses, colorStyles, variantClasses }\n}\n", "// Composables\nimport { useProxiedModel } from './proxiedModel'\n\n// Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef, watch } from 'vue'\nimport { consoleWarn, deepEqual, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, ComputedRef, ExtractPropTypes, InjectionKey, PropType, Ref, UnwrapRef } from 'vue'\n\nexport interface GroupItem {\n  id: number\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n}\n\nexport interface GroupProps {\n  disabled: boolean\n  modelValue: unknown\n  multiple?: boolean\n  mandatory?: boolean | 'force' | undefined\n  max?: number | undefined\n  selectedClass: string | undefined\n  'onUpdate:modelValue': ((val: unknown) => void) | undefined\n}\n\nexport interface GroupProvide {\n  register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n  unregister: (id: number) => void\n  select: (id: number, value: boolean) => void\n  selected: Ref<Readonly<number[]>>\n  isSelected: (id: number) => boolean\n  prev: () => void\n  next: () => void\n  selectedClass: Ref<string | undefined>\n  items: ComputedRef<{\n    id: number\n    value: unknown\n    disabled: boolean | undefined\n  }[]>\n  disabled: Ref<boolean | undefined>\n  getItemIndex: (value: unknown) => number\n}\n\nexport interface GroupItemProvide {\n  id: number\n  isSelected: Ref<boolean>\n  toggle: () => void\n  select: (value: boolean) => void\n  selectedClass: Ref<(string | undefined)[] | false>\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n  group: GroupProvide\n}\n\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined,\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String] as PropType<boolean | 'force'>,\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean,\n}, 'group')\n\nexport const makeGroupItemProps = propsFactory({\n  value: null,\n  disabled: Boolean,\n  selectedClass: String,\n}, 'group-item')\n\nexport interface GroupItemProps extends ExtractPropTypes<ReturnType<typeof makeGroupItemProps>> {\n  'onGroup:selected': ((val: { value: boolean }) => void) | undefined\n}\n\n// Composables\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required?: true,\n): GroupItemProvide\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required: false,\n): GroupItemProvide | null\nexport function useGroupItem (\n  props: GroupItemProps,\n  injectKey: InjectionKey<GroupProvide>,\n  required = true,\n): GroupItemProvide | null {\n  const vm = getCurrentInstance('useGroupItem')\n\n  if (!vm) {\n    throw new Error(\n      '[Vuetify] useGroupItem composable must be used inside a component setup function'\n    )\n  }\n\n  const id = getUid()\n\n  provide(Symbol.for(`${injectKey.description}:id`), id)\n\n  const group = inject(injectKey, null)\n\n  if (!group) {\n    if (!required) return group\n\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`)\n  }\n\n  const value = toRef(props, 'value')\n  const disabled = computed(() => group.disabled.value || props.disabled)\n\n  group.register({\n    id,\n    value,\n    disabled,\n  }, vm)\n\n  onBeforeUnmount(() => {\n    group.unregister(id)\n  })\n\n  const isSelected = computed(() => {\n    return group.isSelected(id)\n  })\n\n  const selectedClass = computed(() => isSelected.value && [group.selectedClass.value, props.selectedClass])\n\n  watch(isSelected, value => {\n    vm.emit('group:selected', { value })\n  })\n\n  return {\n    id,\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: (value: boolean) => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group,\n  }\n}\n\nexport function useGroup (\n  props: GroupProps,\n  injectKey: InjectionKey<GroupProvide>\n) {\n  let isUnmounted = false\n  const items = reactive<GroupItem[]>([])\n  const selected = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => {\n      if (v == null) return []\n\n      return getIds(items, wrapInArray(v))\n    },\n    v => {\n      const arr = getValues(items, v)\n\n      return props.multiple ? arr : arr[0]\n    }\n  )\n\n  const groupVm = getCurrentInstance('useGroup')\n\n  function register (item: GroupItem, vm: ComponentInternalInstance) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item as unknown as UnwrapRef<GroupItem>\n\n    const key = Symbol.for(`${injectKey.description}:id`)\n    const children = findChildrenWithProvide(key, groupVm?.vnode)\n    const index = children.indexOf(vm)\n\n    if (index > -1) {\n      items.splice(index, 0, unwrapped)\n    } else {\n      items.push(unwrapped)\n    }\n  }\n\n  function unregister (id: number) {\n    if (isUnmounted) return\n\n    // TODO: re-evaluate this line's importance in the future\n    // should we only modify the model if mandatory is set.\n    // selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue()\n\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue () {\n    const item = items.find(item => !item.disabled)\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id]\n    }\n  }\n\n  onMounted(() => {\n    forceMandatoryValue()\n  })\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function select (id: number, value?: boolean) {\n    const item = items.find(item => item.id === id)\n    if (value && item?.disabled) return\n\n    if (props.multiple) {\n      const internalValue = selected.value.slice()\n      const index = internalValue.findIndex(v => v === id)\n      const isSelected = ~index\n      value = value ?? !isSelected\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (\n        isSelected &&\n        props.mandatory &&\n        internalValue.length <= 1\n      ) return\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (\n        !isSelected &&\n        props.max != null &&\n        internalValue.length + 1 > props.max\n      ) return\n\n      if (index < 0 && value) internalValue.push(id)\n      else if (index >= 0 && !value) internalValue.splice(index, 1)\n\n      selected.value = internalValue\n    } else {\n      const isSelected = selected.value.includes(id)\n      if (props.mandatory && isSelected) return\n\n      selected.value = (value ?? !isSelected) ? [id] : []\n    }\n  }\n\n  function step (offset: number) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop')\n\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled)\n      item && (selected.value = [item.id])\n    } else {\n      const currentId = selected.value[0]\n      const currentIndex = items.findIndex(i => i.id === currentId)\n\n      let newIndex = (currentIndex + offset) % items.length\n      let newItem = items[newIndex]\n\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length\n        newItem = items[newIndex]\n      }\n\n      if (newItem.disabled) return\n\n      selected.value = [items[newIndex].id]\n    }\n  }\n\n  const state: GroupProvide = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: (id: number) => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items),\n    getItemIndex: (value: unknown) => getItemIndex(items, value),\n  }\n\n  provide(injectKey, state)\n\n  return state\n}\n\nfunction getItemIndex (items: UnwrapRef<GroupItem[]>, value: unknown) {\n  const ids = getIds(items, [value])\n\n  if (!ids.length) return -1\n\n  return items.findIndex(item => item.id === ids[0])\n}\n\nfunction getIds (items: UnwrapRef<GroupItem[]>, modelValue: any[]) {\n  const ids: number[] = []\n\n  modelValue.forEach(value => {\n    const item = items.find(item => deepEqual(value, item.value))\n    const itemByIndex = items[value]\n\n    if (item?.value != null) {\n      ids.push(item.id)\n    } else if (itemByIndex != null) {\n      ids.push(itemByIndex.id)\n    }\n  })\n\n  return ids\n}\n\nfunction getValues (items: UnwrapRef<GroupItem[]>, ids: any[]) {\n  const values: unknown[] = []\n\n  ids.forEach(id => {\n    const itemIndex = items.findIndex(item => item.id === id)\n    if (~itemIndex) {\n      const item = items[itemIndex]\n      values.push(item.value != null ? item.value : itemIndex)\n    }\n  })\n\n  return values\n}\n", "// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'] as const\n\ntype Position = typeof positionValues[number]\n\nexport interface PositionProps {\n  position: Position | undefined\n}\n\n// Composables\nexport const makePositionProps = propsFactory({\n  position: {\n    type: String as PropType<Position>,\n    validator: /* istanbul ignore next */ (v: any) => positionValues.includes(v),\n  },\n}, 'position')\n\nexport function usePosition (\n  props: PositionProps,\n  name = getCurrentInstanceName(),\n) {\n  const positionClasses = computed(() => {\n    return props.position ? `${name}--${props.position}` : undefined\n  })\n\n  return { positionClasses }\n}\n", "// Utilities\nimport { nextTick, watch } from 'vue'\n\n// Types\nimport type { UseLink } from './router'\n\nexport function useSelectLink (link: UseLink, select?: (value: boolean, e?: Event) => void) {\n  watch(() => link.isActive?.value, isActive => {\n    if (link.isLink.value && isActive && select) {\n      nextTick(() => {\n        select(true)\n      })\n    }\n  }, {\n    immediate: true,\n  })\n}\n", "// Types\nimport type { InjectionKey } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VTabsSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-tabs')\n", "// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport { VFadeTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useDisplay } from '@/composables'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { useResizeObserver } from '@/composables/resizeObserver'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, shallowRef, watch } from 'vue'\nimport { bias, calculateCenteredOffset, calculateUpdatedOffset } from './helpers'\nimport { clamp, focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType } from 'vue'\nimport type { GroupProvide } from '@/composables/group'\n\nexport const VSlideGroupSymbol: InjectionKey<GroupProvide> = Symbol.for('vuetify:v-slide-group')\n\ninterface SlideGroupSlot {\n  next: GroupProvide['next']\n  prev: GroupProvide['prev']\n  select: GroupProvide['select']\n  isSelected: GroupProvide['isSelected']\n}\n\ntype VSlideGroupSlots = {\n  default: SlideGroupSlot\n  prev: SlideGroupSlot\n  next: SlideGroupSlot\n}\n\nexport const makeVSlideGroupProps = propsFactory({\n  centerActive: Boolean,\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n  },\n  symbol: {\n    type: null,\n    default: VSlideGroupSymbol,\n  },\n  nextIcon: {\n    type: IconValue,\n    default: '$next',\n  },\n  prevIcon: {\n    type: IconValue,\n    default: '$prev',\n  },\n  showArrows: {\n    type: [Boolean, String],\n    validator: (v: any) => (\n      typeof v === 'boolean' || [\n        'always',\n        'desktop',\n        'mobile',\n      ].includes(v)\n    ),\n  },\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n  ...makeGroupProps({\n    selectedClass: 'v-slide-group-item--active',\n  }),\n}, 'VSlideGroup')\n\nexport const VSlideGroup = genericComponent<VSlideGroupSlots>()({\n  name: 'VSlideGroup',\n\n  props: makeVSlideGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { isRtl } = useRtl()\n    const { mobile } = useDisplay()\n    const group = useGroup(props, props.symbol)\n    const isOverflowing = shallowRef(false)\n    const scrollOffset = shallowRef(0)\n    const containerSize = shallowRef(0)\n    const contentSize = shallowRef(0)\n    const isHorizontal = computed(() => props.direction === 'horizontal')\n\n    const { resizeRef: containerRef, contentRect: containerRect } = useResizeObserver()\n    const { resizeRef: contentRef, contentRect } = useResizeObserver()\n\n    const firstSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[0])\n    })\n\n    const lastSelectedIndex = computed(() => {\n      if (!group.selected.value.length) return -1\n\n      return group.items.value.findIndex(item => item.id === group.selected.value[group.selected.value.length - 1])\n    })\n\n    if (IN_BROWSER) {\n      let frame = -1\n      watch(() => [group.selected.value, containerRect.value, contentRect.value, isHorizontal.value], () => {\n        cancelAnimationFrame(frame)\n        frame = requestAnimationFrame(() => {\n          if (containerRect.value && contentRect.value) {\n            const sizeProperty = isHorizontal.value ? 'width' : 'height'\n\n            containerSize.value = containerRect.value[sizeProperty]\n            contentSize.value = contentRect.value[sizeProperty]\n\n            isOverflowing.value = containerSize.value + 1 < contentSize.value\n          }\n\n          if (firstSelectedIndex.value >= 0 && contentRef.value) {\n            // TODO: Is this too naive? Should we store element references in group composable?\n            const selectedElement = contentRef.value.children[lastSelectedIndex.value] as HTMLElement\n\n            if (firstSelectedIndex.value === 0 || !isOverflowing.value) {\n              scrollOffset.value = 0\n            } else if (props.centerActive) {\n              scrollOffset.value = calculateCenteredOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                isHorizontal: isHorizontal.value,\n              })\n            } else if (isOverflowing.value) {\n              scrollOffset.value = calculateUpdatedOffset({\n                selectedElement,\n                containerSize: containerSize.value,\n                contentSize: contentSize.value,\n                isRtl: isRtl.value,\n                currentScrollOffset: scrollOffset.value,\n                isHorizontal: isHorizontal.value,\n              })\n            }\n          }\n        })\n      })\n    }\n\n    const disableTransition = shallowRef(false)\n\n    let startTouch = 0\n    let startOffset = 0\n\n    function onTouchstart (e: TouchEvent) {\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      startOffset = sign * scrollOffset.value\n      startTouch = e.touches[0][sizeProperty]\n      disableTransition.value = true\n    }\n\n    function onTouchmove (e: TouchEvent) {\n      if (!isOverflowing.value) return\n\n      const sizeProperty = isHorizontal.value ? 'clientX' : 'clientY'\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      scrollOffset.value = sign * (startOffset + startTouch - e.touches[0][sizeProperty])\n    }\n\n    function onTouchend (e: TouchEvent) {\n      const maxScrollOffset = contentSize.value - containerSize.value\n\n      if (scrollOffset.value < 0 || !isOverflowing.value) {\n        scrollOffset.value = 0\n      } else if (scrollOffset.value >= maxScrollOffset) {\n        scrollOffset.value = maxScrollOffset\n      }\n\n      disableTransition.value = false\n    }\n\n    function onScroll () {\n      if (!containerRef.value) return\n\n      containerRef.value[isHorizontal.value ? 'scrollLeft' : 'scrollTop'] = 0\n    }\n\n    const isFocused = shallowRef(false)\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n\n      if (!isOverflowing.value || !contentRef.value) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of e.composedPath()) {\n        for (const item of contentRef.value.children) {\n          if (item === el) {\n            scrollOffset.value = calculateUpdatedOffset({\n              selectedElement: item as HTMLElement,\n              containerSize: containerSize.value,\n              contentSize: contentSize.value,\n              isRtl: isRtl.value,\n              currentScrollOffset: scrollOffset.value,\n              isHorizontal: isHorizontal.value,\n            })\n            return\n          }\n        }\n      }\n    }\n\n    function onFocusout (e: FocusEvent) {\n      isFocused.value = false\n    }\n\n    function onFocus (e: FocusEvent) {\n      if (\n        !isFocused.value &&\n        !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget as Node))\n      ) focus()\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (!contentRef.value) return\n\n      if (isHorizontal.value) {\n        if (e.key === 'ArrowRight') {\n          focus(isRtl.value ? 'prev' : 'next')\n        } else if (e.key === 'ArrowLeft') {\n          focus(isRtl.value ? 'next' : 'prev')\n        }\n      } else {\n        if (e.key === 'ArrowDown') {\n          focus('next')\n        } else if (e.key === 'ArrowUp') {\n          focus('prev')\n        }\n      }\n\n      if (e.key === 'Home') {\n        focus('first')\n      } else if (e.key === 'End') {\n        focus('last')\n      }\n    }\n\n    function focus (location?: 'next' | 'prev' | 'first' | 'last') {\n      if (!contentRef.value) return\n\n      if (!location) {\n        const focusable = focusableChildren(contentRef.value)\n        focusable[0]?.focus()\n      } else if (location === 'next') {\n        const el = contentRef.value.querySelector(':focus')?.nextElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('first')\n      } else if (location === 'prev') {\n        const el = contentRef.value.querySelector(':focus')?.previousElementSibling as HTMLElement | undefined\n        if (el) el.focus()\n        else focus('last')\n      } else if (location === 'first') {\n        (contentRef.value.firstElementChild as HTMLElement)?.focus()\n      } else if (location === 'last') {\n        (contentRef.value.lastElementChild as HTMLElement)?.focus()\n      }\n    }\n\n    function scrollTo (location: 'prev' | 'next') {\n      const newAbsoluteOffset = scrollOffset.value + (location === 'prev' ? -1 : 1) * containerSize.value\n\n      scrollOffset.value = clamp(newAbsoluteOffset, 0, contentSize.value - containerSize.value)\n    }\n\n    const contentStyles = computed(() => {\n      // This adds friction when scrolling the 'wrong' way when at max offset\n      let scrollAmount = scrollOffset.value > contentSize.value - containerSize.value\n        ? -(contentSize.value - containerSize.value) + bias(contentSize.value - containerSize.value - scrollOffset.value)\n        : -scrollOffset.value\n\n      // This adds friction when scrolling the 'wrong' way when at min offset\n      if (scrollOffset.value <= 0) {\n        scrollAmount = bias(-scrollOffset.value)\n      }\n\n      const sign = isRtl.value && isHorizontal.value ? -1 : 1\n      return {\n        transform: `translate${isHorizontal.value ? 'X' : 'Y'}(${sign * scrollAmount}px)`,\n        transition: disableTransition.value ? 'none' : '',\n        willChange: disableTransition.value ? 'transform' : '',\n      }\n    })\n\n    const slotProps = computed(() => ({\n      next: group.next,\n      prev: group.prev,\n      select: group.select,\n      isSelected: group.isSelected,\n    }))\n\n    const hasAffixes = computed(() => {\n      switch (props.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !mobile.value\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return isOverflowing.value || Math.abs(scrollOffset.value) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          mobile.value ||\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !mobile.value &&\n          (isOverflowing.value || Math.abs(scrollOffset.value) > 0)\n        )\n      }\n    })\n\n    const hasPrev = computed(() => {\n      return Math.abs(scrollOffset.value) > 0\n    })\n\n    const hasNext = computed(() => {\n      // Check one scroll ahead to know the width of right-most item\n      return contentSize.value > Math.abs(scrollOffset.value) + containerSize.value\n    })\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-slide-group',\n          {\n            'v-slide-group--vertical': !isHorizontal.value,\n            'v-slide-group--has-affixes': hasAffixes.value,\n            'v-slide-group--is-overflowing': isOverflowing.value,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n        tabindex={ (isFocused.value || group.selected.value.length) ? -1 : 0 }\n        onFocus={ onFocus }\n      >\n        { hasAffixes.value && (\n          <div\n            key=\"prev\"\n            class={[\n              'v-slide-group__prev',\n              { 'v-slide-group__prev--disabled': !hasPrev.value },\n            ]}\n            onClick={ () => scrollTo('prev') }\n          >\n            { slots.prev?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.nextIcon : props.prevIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n\n        <div\n          key=\"container\"\n          ref={ containerRef }\n          class=\"v-slide-group__container\"\n          onScroll={ onScroll }\n        >\n          <div\n            ref={ contentRef }\n            class=\"v-slide-group__content\"\n            style={ contentStyles.value }\n            onTouchstartPassive={ onTouchstart }\n            onTouchmovePassive={ onTouchmove }\n            onTouchendPassive={ onTouchend }\n            onFocusin={ onFocusin }\n            onFocusout={ onFocusout }\n            onKeydown={ onKeydown }\n          >\n            { slots.default?.(slotProps.value) }\n          </div>\n        </div>\n\n        { hasAffixes.value && (\n          <div\n            key=\"next\"\n            class={[\n              'v-slide-group__next',\n              { 'v-slide-group__next--disabled': !hasNext.value },\n            ]}\n            onClick={ () => scrollTo('next') }\n          >\n            { slots.next?.(slotProps.value) ?? (\n              <VFadeTransition>\n                <VIcon icon={ isRtl.value ? props.prevIcon : props.nextIcon }></VIcon>\n              </VFadeTransition>\n            )}\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {\n      selected: group.selected,\n      scrollTo,\n      scrollOffset,\n      focus,\n    }\n  },\n})\n\nexport type VSlideGroup = InstanceType<typeof VSlideGroup>\n", "export function bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  currentScrollOffset,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  currentScrollOffset: number\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n  const adjustedOffsetStart = isRtl && isHorizontal ? (contentSize - offsetStart - clientSize) : offsetStart\n\n  const totalSize = containerSize + currentScrollOffset\n  const itemOffset = clientSize + adjustedOffsetStart\n  const additionalOffset = clientSize * 0.4\n\n  if (adjustedOffsetStart <= currentScrollOffset) {\n    currentScrollOffset = Math.max(adjustedOffsetStart - additionalOffset, 0)\n  } else if (totalSize <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalSize - itemOffset - additionalOffset), contentSize - containerSize)\n  }\n\n  return currentScrollOffset\n}\n\nexport function calculateCenteredOffset ({\n  selectedElement,\n  containerSize,\n  contentSize,\n  isRtl,\n  isHorizontal,\n}: {\n  selectedElement: HTMLElement\n  containerSize: number\n  contentSize: number\n  isRtl: boolean\n  isHorizontal: boolean\n}): number {\n  const clientSize = isHorizontal ? selectedElement.clientWidth : selectedElement.clientHeight\n  const offsetStart = isHorizontal ? selectedElement.offsetLeft : selectedElement.offsetTop\n\n  const offsetCentered = isRtl && isHorizontal\n    ? contentSize - offsetStart - clientSize / 2 - containerSize / 2\n    : offsetStart + clientSize / 2 - containerSize / 2\n\n  return Math.min(contentSize - containerSize, Math.max(0, offsetCentered))\n}\n"],
  "mappings": "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",
  "names": ["makeBorderProps", "propsFactory", "border", "Boolean", "Number", "String", "useBorder", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "borderClasses", "computed", "isRef", "value", "classes", "push", "split", "makeElevationProps", "propsFactory", "elevation", "type", "Number", "String", "validator", "v", "value", "parseInt", "isNaN", "useElevation", "props", "elevationClasses", "computed", "isRef", "classes", "push", "allowedVariants", "genOverlays", "isClickable", "name", "_createVNode", "_Fragment", "makeVariantProps", "propsFactory", "color", "String", "variant", "type", "default", "validator", "v", "includes", "useVariant", "props", "arguments", "length", "undefined", "getCurrentInstanceName", "variantClasses", "computed", "unref", "colorClasses", "colorStyles", "useColor", "makeVBtnGroupProps", "propsFactory", "divided", "Boolean", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeElevationProps", "makeRoundedProps", "makeTagProps", "makeThemeProps", "makeVariantProps", "VBtnGroup", "genericComponent", "name", "props", "setup", "_ref", "slots", "themeClasses", "provideTheme", "densityClasses", "useDensity", "borderClasses", "useBorder", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "provideDefaults", "VBtn", "height", "color", "toRef", "density", "flat", "variant", "useRender", "_createVNode", "tag", "value", "class", "style", "makeGroupProps", "propsFactory", "modelValue", "type", "default", "undefined", "multiple", "Boolean", "mandatory", "String", "max", "Number", "selectedClass", "disabled", "makeGroupItemProps", "value", "useGroupItem", "props", "injectKey", "required", "arguments", "length", "vm", "getCurrentInstance", "Error", "id", "getUid", "provide", "Symbol", "for", "description", "group", "inject", "toRef", "computed", "register", "onBeforeUnmount", "unregister", "isSelected", "watch", "emit", "toggle", "select", "useGroup", "isUnmounted", "items", "reactive", "selected", "useProxiedModel", "v", "getIds", "wrapInArray", "arr", "getValues", "groupVm", "item", "unwrapped", "key", "children", "findChildrenWithProvide", "vnode", "index", "indexOf", "splice", "push", "forceMandatoryValue", "findIndex", "find", "onMounted", "internalValue", "slice", "includes", "step", "offset", "consoleWarn", "currentId", "currentIndex", "i", "newIndex", "newItem", "state", "prev", "next", "getItemIndex", "ids", "forEach", "deepEqual", "itemByIndex", "values", "itemIndex", "VBtnToggleSymbol", "Symbol", "for", "makeVBtnToggleProps", "propsFactory", "makeVBtnGroupProps", "makeGroupProps", "VBtnToggle", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isSelected", "next", "prev", "select", "selected", "useGroup", "useRender", "btnGroupProps", "VBtnGroup", "filterProps", "_createVNode", "_mergeProps", "class", "style", "default", "positionValues", "makePositionProps", "propsFactory", "position", "type", "String", "validator", "v", "includes", "usePosition", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "positionClasses", "computed", "useSelectLink", "link", "select", "watch", "isActive", "value", "isLink", "nextTick", "immediate", "makeVBtnProps", "propsFactory", "active", "type", "Boolean", "default", "undefined", "symbol", "VBtnToggleSymbol", "flat", "icon", "String", "Function", "Object", "prependIcon", "IconValue", "appendIcon", "block", "stacked", "ripple", "text", "makeBorderProps", "makeComponentProps", "makeDensityProps", "makeDimensionProps", "makeElevationProps", "makeGroupItemProps", "makeLoaderProps", "makeLocationProps", "makePositionProps", "makeRoundedProps", "makeRouterProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "makeVariantProps", "variant", "VBtn", "genericComponent", "name", "directives", "Ripple", "props", "emits", "val", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "borderClasses", "useBorder", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "elevationClasses", "useElevation", "loaderClasses", "useLoader", "locationStyles", "useLocation", "positionClasses", "usePosition", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "group", "useGroupItem", "link", "useLink", "isActive", "computed", "isLink", "value", "isSelected", "isDisabled", "disabled", "isElevated", "border", "valueAttr", "JSON", "stringify", "onClick", "e", "navigate", "toggle", "useSelectLink", "select", "useRender", "Tag", "hasPrepend", "prepend", "hasAppend", "append", "hasIcon", "hasColor", "_withDirectives", "_createVNode", "selectedClass", "loading", "class", "style", "href", "genOverlays", "VIcon", "VDefaultsProvider", "loader", "VProgressCircular", "_resolveDirective", "VTabsSymbol", "Symbol", "for", "makeVTabProps", "propsFactory", "fixed", "Boolean", "sliderColor", "String", "hideSlider", "direction", "type", "default", "omit", "makeVBtnProps", "selectedClass", "variant", "VTab", "genericComponent", "name", "props", "setup", "_ref", "slots", "attrs", "textColorClasses", "sliderColorClasses", "textColorStyles", "sliderColorStyles", "useTextColor", "isHorizontal", "computed", "isSelected", "shallowRef", "rootEl", "ref", "sliderEl", "updateSlider", "_ref2", "value", "prevEl", "$el", "parentElement", "querySelector", "nextEl", "color", "getComputedStyle", "prevBox", "getBoundingClientRect", "nextBox", "xy", "XY", "rightBottom", "widthHeight", "prevPos", "nextPos", "delta", "origin", "Math", "sign", "size", "abs", "scale", "max", "initialScale", "sigma", "animate", "backgroundColor", "transform", "transformOrigin", "Array", "fill", "duration", "easing", "standardEasing", "useRender", "btnProps", "VBtn", "filterProps", "_createVNode", "_mergeProps", "VTabsSymbol", "class", "style", "undefined", "text", "bias", "val", "c", "x", "Math", "abs", "sign", "calculateUpdatedOffset", "_ref", "selectedElement", "containerSize", "contentSize", "isRtl", "currentScrollOffset", "isHorizontal", "clientSize", "clientWidth", "clientHeight", "offsetStart", "offsetLeft", "offsetTop", "adjustedOffsetStart", "totalSize", "itemOffset", "additionalOffset", "max", "min", "calculateCenteredOffset", "_ref2", "offsetCentered", "VSlideGroupSymbol", "Symbol", "for", "makeVSlideGroupProps", "propsFactory", "centerActive", "Boolean", "direction", "type", "String", "default", "symbol", "nextIcon", "IconValue", "prevIcon", "showArrows", "validator", "v", "includes", "makeComponentProps", "makeTagProps", "makeGroupProps", "selectedClass", "VSlideGroup", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "isRtl", "useRtl", "mobile", "useDisplay", "group", "useGroup", "isOverflowing", "shallowRef", "scrollOffset", "containerSize", "contentSize", "isHorizontal", "computed", "resizeRef", "containerRef", "contentRect", "containerRect", "useResizeObserver", "contentRef", "firstSelectedIndex", "selected", "length", "items", "findIndex", "item", "id", "lastSelectedIndex", "IN_BROWSER", "frame", "watch", "cancelAnimationFrame", "requestAnimationFrame", "sizeProperty", "selectedElement", "children", "calculateCenteredOffset", "calculateUpdatedOffset", "currentScrollOffset", "disableTransition", "startTouch", "startOffset", "onTouchstart", "e", "sign", "touches", "onTouchmove", "onTouchend", "maxScrollOffset", "onScroll", "isFocused", "onFocusin", "el", "composedPath", "onFocusout", "onFocus", "relatedTarget", "contains", "focus", "onKeydown", "key", "location", "focusable", "focusableChildren", "querySelector", "nextElementSibling", "previousElementSibling", "firstElementChild", "lastElementChild", "scrollTo", "newAbsoluteOffset", "clamp", "contentStyles", "scrollAmount", "bias", "transform", "transition", "willChange", "slotProps", "next", "prev", "select", "isSelected", "hasAffixes", "Math", "abs", "hasPrev", "hasNext", "useRender", "_createVNode", "tag", "class", "style", "onClick", "VFadeTransition", "VIcon", "parseItems", "items", "map", "item", "title", "value", "makeVTabsProps", "propsFactory", "alignTabs", "type", "String", "default", "color", "fixedTabs", "Boolean", "Array", "stacked", "bgColor", "grow", "height", "Number", "undefined", "hideSlider", "sliderColor", "makeVSlideGroupProps", "mandatory", "makeDensityProps", "makeTagProps", "VTabs", "genericComponent", "name", "props", "emits", "v", "setup", "_ref", "slots", "model", "useProxiedModel", "parsedItems", "computed", "densityClasses", "useDensity", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "provideDefaults", "VTab", "direction", "fixed", "useRender", "slideGroupProps", "VSlideGroup", "filterProps", "_createVNode", "_mergeProps", "$event", "class", "convertToUnit", "style", "VTabsSymbol"]
}
