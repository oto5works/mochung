{
  "version": 3,
  "sources": ["../../sal.js/dist/webpack:/sal/webpack/universalModuleDefinition", "../../sal.js/dist/webpack:/sal/webpack/bootstrap", "../../sal.js/dist/webpack:/sal/webpack/runtime/define property getters", "../../sal.js/dist/webpack:/sal/webpack/runtime/hasOwnProperty shorthand", "../../sal.js/dist/webpack:/sal/src/sal.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sal\"] = factory();\n\telse\n\t\troot[\"sal\"] = factory();\n})(this, function() {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "/**\n * Sal - Scroll Animation Library\n * Performance focused, lightweight scroll animation library\n */\n\nimport './sal.scss';\n\nconst SSR_MESSAGE = 'Sal was not initialised! Probably it is used in SSR.';\n\nconst NOT_SUPPORTED_MESSAGE = ''\n  + 'Your browser does not support IntersectionObserver!\\n'\n  + 'Get a polyfill from here:\\n'\n  + 'https://github.com/w3c/IntersectionObserver/tree/master/polyfill';\n\n/**\n * Default options\n */\nlet options = {\n  root: null,\n  rootMargin: '0% 50%',\n  threshold: 0.5,\n  animateClassName: 'sal-animate',\n  disabledClassName: 'sal-disabled',\n  enterEventName: 'sal:in',\n  exitEventName: 'sal:out',\n  selector: '[data-sal]',\n  once: true,\n  disabled: false,\n};\n\n/**\n * Private\n */\nlet elements = [];\nlet intersectionObserver = null;\n\n/**\n * Sets options.\n * @param {Object} settings\n */\nconst setOptions = (settings) => {\n  if (settings && settings !== options) {\n    options = {\n      ...options,\n      ...settings,\n    };\n  }\n};\n\n/**\n * Clears animation for given element.\n * @param {HTMLElement} element\n */\nconst clearAnimation = (element) => {\n  element.classList.remove(options.animateClassName);\n};\n\n/**\n * Dispatches the animate event on the intersection observer entry.\n * @param {IntersectionObserverEntry} detail The entry to fire event on.\n */\nconst fireEvent = (name, entry) => {\n  const event = new CustomEvent(name, {\n    bubbles: true,\n    detail: entry,\n  });\n\n  entry.target.dispatchEvent(event);\n};\n\n/**\n * Launches animation by adding class.\n * @param {IntersectionObserverEntry} entry\n */\nconst animate = (entry) => {\n  entry.target.classList.add(options.animateClassName);\n  fireEvent(options.enterEventName, entry);\n};\n\n/**\n * Reverses animation by removing class.\n * @param {IntersectionObserverEntry} entry\n */\nconst reverse = (entry) => {\n  clearAnimation(entry.target);\n  fireEvent(options.exitEventName, entry);\n};\n\n/**\n * Checks if element was animated.\n * @param {HTMLElement} element\n */\nconst isAnimated = (element) => (\n  element.classList.contains(options.animateClassName)\n);\n\n/**\n * Enables animations by remove class from body.\n */\nconst enableAnimations = () => {\n  document.body.classList.remove(options.disabledClassName);\n};\n\n/**\n * Disables animations by add class from body.\n */\nconst disableAnimations = () => {\n  document.body.classList.add(options.disabledClassName);\n};\n\n/**\n * Clears observer.\n */\nconst clearObserver = () => {\n  intersectionObserver.disconnect();\n  intersectionObserver = null;\n};\n\n/**\n * Check if should be disabled.\n * @return {Boolean}\n */\nconst isDisabled = () => (\n  options.disabled\n  || (\n    (typeof options.disabled === 'function')\n    && options.disabled()\n  )\n);\n\n/**\n * IntersectionObserver callback.\n * @param  {Array<IntersectionObserverEntry>} entries\n * @param  {IntersectionObserver} observer\n */\nconst onIntersection = (entries, observer) => {\n  entries.forEach((entry) => {\n    const { target } = entry;\n    const hasRepeatFlag = target.dataset.salRepeat !== undefined;\n    const hasOnceFlag = target.dataset.salOnce !== undefined;\n    const shouldRepeat = hasRepeatFlag || !(hasOnceFlag || options.once);\n\n    if (entry.intersectionRatio >= options.threshold) {\n      animate(entry);\n\n      if (!shouldRepeat) {\n        observer.unobserve(target);\n      }\n    } else if (shouldRepeat) {\n      reverse(entry);\n    }\n  });\n};\n\n/**\n * Returns collection of elements and pushes them to observer.\n *\n * @returns {Array<Node>}\n */\nconst getObservedElements = () => {\n  const collection = [].filter.call(\n    document.querySelectorAll(options.selector),\n    (element) => !isAnimated(element, options.animateClassName),\n  );\n\n  collection.forEach((element) => intersectionObserver.observe(element));\n\n  return collection;\n};\n\n/**\n * Disables instance by removing animations and clearing observer.\n */\nconst disable = () => {\n  disableAnimations();\n  clearObserver();\n};\n\n/**\n * Enables instance by launching new IntersectionObserver.\n */\nconst enable = () => {\n  enableAnimations();\n\n  intersectionObserver = new IntersectionObserver(onIntersection, {\n    root: options.root,\n    rootMargin: options.rootMargin,\n    threshold: options.threshold,\n  });\n\n  elements = getObservedElements();\n};\n\n/**\n * Resets instance to provide new settings.\n * @param {Object} settings\n */\nconst reset = (settings = {}) => {\n  clearObserver();\n\n  Array.from(document.querySelectorAll(options.selector))\n    .forEach(clearAnimation);\n\n  setOptions(settings);\n  enable();\n};\n\n/**\n * Updates observer with new elements to animated.\n * Useful for dynamically injected elements.\n */\nconst update = () => {\n  const newElements = getObservedElements();\n  elements.push(newElements);\n};\n\n/**\n * Init\n * @param  {Object} settings\n * @return {Object} public API\n */\nconst init = (settings = options) => {\n  setOptions(settings);\n\n  // Early return, when window object is not defined\n  // e.g. during Server Side Rendering\n  if (typeof window === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.warn(SSR_MESSAGE);\n\n    return {\n      elements,\n      disable,\n      enable,\n      reset,\n      update,\n    };\n  }\n\n  if (!window.IntersectionObserver) {\n    disableAnimations();\n\n    throw Error(NOT_SUPPORTED_MESSAGE);\n  }\n\n  if (!isDisabled()) {\n    enable();\n  } else {\n    disableAnimations();\n  }\n\n  return {\n    elements,\n    disable,\n    enable,\n    reset,\n    update,\n  };\n};\n\nexport default init;\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "SSR_MESSAGE", "NOT_SUPPORTED_MESSAGE", "options", "rootMargin", "threshold", "animateClassName", "disabledClassName", "enterEventName", "exitEventName", "selector", "once", "disabled", "elements", "intersectionObserver", "setOptions", "settings", "clearAnimation", "element", "classList", "remove", "fireEvent", "name", "entry", "event", "CustomEvent", "bubbles", "detail", "target", "dispatchEvent", "disableAnimations", "document", "body", "add", "clearObserver", "disconnect", "isDisabled", "onIntersection", "entries", "observer", "forEach", "hasRepeatFlag", "dataset", "salRepeat", "hasOnceFlag", "salOnce", "shouldRepeat", "intersectionRatio", "unobserve", "getObservedElements", "collection", "filter", "querySelectorAll", "contains", "observe", "disable", "enable", "IntersectionObserver", "reset", "Array", "from", "update", "newElements", "push", "window", "console", "warn", "Error"]
}
