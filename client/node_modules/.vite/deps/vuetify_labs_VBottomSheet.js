import {
  VDialog,
  makeVDialogProps
} from "./chunk-E4N675AH.js";
import "./chunk-C2ZWC3JI.js";
import "./chunk-RUEOQLH5.js";
import "./chunk-DZFHFB3V.js";
import "./chunk-IPPTZ55P.js";
import {
  genericComponent,
  propsFactory,
  useProxiedModel,
  useRender
} from "./chunk-YNB7BCFD.js";
import "./chunk-3JBER6B3.js";
import {
  createVNode,
  mergeProps
} from "./chunk-U54E7EGV.js";
import "./chunk-OROXOI2D.js";

// node_modules/vuetify/lib/labs/VBottomSheet/VBottomSheet.mjs
import "/Volumes/Macintosh HD - \uB370\uC774\uD130/github/mochung/client/node_modules/vuetify/lib/labs/VBottomSheet/VBottomSheet.css";
var makeVBottomSheetProps = propsFactory({
  inset: Boolean,
  ...makeVDialogProps({
    contentClass: "v-bottom-sheet__content",
    transition: "bottom-sheet-transition"
  })
}, "VBottomSheet");
var VBottomSheet = genericComponent()({
  name: "VBottomSheet",
  props: makeVBottomSheetProps(),
  emits: {
    "update:modelValue": (value) => true
  },
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    const isActive = useProxiedModel(props, "modelValue");
    useRender(() => {
      const [dialogProps] = VDialog.filterProps(props);
      return createVNode(VDialog, mergeProps(dialogProps, {
        "modelValue": isActive.value,
        "onUpdate:modelValue": ($event) => isActive.value = $event,
        "class": ["v-bottom-sheet", {
          "v-bottom-sheet--inset": props.inset
        }]
      }), slots);
    });
    return {};
  }
});
export {
  VBottomSheet
};
//# sourceMappingURL=vuetify_labs_VBottomSheet.js.map
