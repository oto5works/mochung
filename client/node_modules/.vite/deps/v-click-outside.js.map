{
  "version": 3,
  "sources": ["../../v-click-outside/src/v-click-outside.js", "../../v-click-outside/src/index.js"],
  "sourcesContent": ["const HANDLERS_PROPERTY = '__v-click-outside'\nconst HAS_WINDOWS = typeof window !== 'undefined'\nconst HAS_NAVIGATOR = typeof navigator !== 'undefined'\nconst IS_TOUCH =\n  HAS_WINDOWS &&\n  ('ontouchstart' in window ||\n    (HAS_NAVIGATOR && navigator.msMaxTouchPoints > 0))\nconst EVENTS = IS_TOUCH ? ['touchstart'] : ['click']\n\nfunction processDirectiveArguments(bindingValue) {\n  const isFunction = typeof bindingValue === 'function'\n  if (!isFunction && typeof bindingValue !== 'object') {\n    throw new Error(\n      'v-click-outside: Binding value must be a function or an object',\n    )\n  }\n\n  return {\n    handler: isFunction ? bindingValue : bindingValue.handler,\n    middleware: bindingValue.middleware || ((item) => item),\n    events: bindingValue.events || EVENTS,\n    isActive: !(bindingValue.isActive === false),\n    detectIframe: !(bindingValue.detectIframe === false),\n    capture: !!bindingValue.capture,\n  }\n}\n\nfunction execHandler({ event, handler, middleware }) {\n  if (middleware(event)) {\n    handler(event)\n  }\n}\n\nfunction onFauxIframeClick({ el, event, handler, middleware }) {\n  // Note: on firefox clicking on iframe triggers blur, but only on\n  //       next event loop it becomes document.activeElement\n  // https://stackoverflow.com/q/2381336#comment61192398_23231136\n  setTimeout(() => {\n    const { activeElement } = document\n    if (\n      activeElement &&\n      activeElement.tagName === 'IFRAME' &&\n      !el.contains(activeElement)\n    ) {\n      execHandler({ event, handler, middleware })\n    }\n  }, 0)\n}\n\nfunction onEvent({ el, event, handler, middleware }) {\n  // Note: composedPath is not supported on IE and Edge, more information here:\n  //       https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath\n  //       In the meanwhile, we are using el.contains for those browsers, not\n  //       the ideal solution, but using IE or EDGE is not ideal either.\n  const path = (event.composedPath && event.composedPath()) || event.path\n  const isClickOutside = path\n    ? path.indexOf(el) < 0\n    : !el.contains(event.target)\n\n  if (!isClickOutside) {\n    return\n  }\n\n  execHandler({ event, handler, middleware })\n}\n\nfunction bind(el, { value }) {\n  const {\n    events,\n    handler,\n    middleware,\n    isActive,\n    detectIframe,\n    capture,\n  } = processDirectiveArguments(value)\n  if (!isActive) {\n    return\n  }\n\n  el[HANDLERS_PROPERTY] = events.map((eventName) => ({\n    event: eventName,\n    srcTarget: document.documentElement,\n    handler: (event) => onEvent({ el, event, handler, middleware }),\n    capture,\n  }))\n\n  if (detectIframe) {\n    const detectIframeEvent = {\n      event: 'blur',\n      srcTarget: window,\n      handler: (event) => onFauxIframeClick({ el, event, handler, middleware }),\n      capture,\n    }\n\n    el[HANDLERS_PROPERTY] = [...el[HANDLERS_PROPERTY], detectIframeEvent]\n  }\n\n  el[HANDLERS_PROPERTY].forEach(({ event, srcTarget, handler }) =>\n    setTimeout(() => {\n      // Note: More info about this implementation can be found here:\n      //       https://github.com/ndelvalle/v-click-outside/issues/137\n      if (!el[HANDLERS_PROPERTY]) {\n        return\n      }\n      srcTarget.addEventListener(event, handler, capture)\n    }, 0),\n  )\n}\n\nfunction unbind(el) {\n  const handlers = el[HANDLERS_PROPERTY] || []\n  handlers.forEach(({ event, srcTarget, handler, capture }) =>\n    srcTarget.removeEventListener(event, handler, capture),\n  )\n  delete el[HANDLERS_PROPERTY]\n}\n\nfunction update(el, { value, oldValue }) {\n  if (JSON.stringify(value) === JSON.stringify(oldValue)) {\n    return\n  }\n  unbind(el)\n  bind(el, { value })\n}\n\nconst directive = {\n  bind,\n  update,\n  unbind,\n}\n\nexport default HAS_WINDOWS ? directive : {}\n", "import directive from './v-click-outside'\n\nconst plugin = {\n  install(Vue) {\n    Vue.directive('click-outside', directive)\n  },\n  directive,\n}\n\nexport default plugin\n"],
  "mappings": "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",
  "names": ["HANDLERS_PROPERTY", "HAS_WINDOWS", "window", "navigator", "EVENTS", "HAS_NAVIGATOR", "msMaxTouchPoints", "n", "e", "t", "execHandler", "event", "handler", "middleware", "el", "bindingValue", "item", "events", "isActive", "detectIframe", "capture", "eventName", "srcTarget", "document", "documentElement", "r", "a", "path", "composedPath", "indexOf", "target", "setTimeout", "activeElement", "tagName", "contains", "detectIframeEvent", "forEach", "addEventListener", "unbind", "removeEventListener", "bind", "update", "value", "oldValue", "JSON", "stringify", "install", "Vue"]
}
